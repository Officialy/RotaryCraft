plugins {
    id 'eclipse'
    id 'maven-publish'
    // Apply the ModDevGradle Legacy Forge plugin
    id 'net.neoforged.moddev.legacyforge' version '2.0.99'
}

version = '0.0.1a'
group = 'reika.rotarycraft'
archivesBaseName = 'RotaryCraft'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

legacyForge {
    // Develop against MinecraftForge version 47.4.0 for 1.20.1
    version = "1.20.1-47.4.3"

    // Validate AT files and raise errors when they have invalid targets
    validateAccessTransformers = true

    runs {
        client {
            client()
        }

        server {
            server()
        }

        data {
            data()
        }
    }

    mods {
        rotarycraft {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    // ModDevGradle Legacy handles the minecraft dependency automatically
    implementation project(':DragonAPI')

    runtimeOnly project(':ElectriCraft')
    runtimeOnly project(':GeoStrata')
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "rotarycraft",
                "Specification-Vendor"    : "reika",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "reika",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Note: reobfuscation is automatically configured by ModDevGradle Legacy
// The reobfuscated jar will be in build/libs, non-obfuscated in build/devlibs

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}