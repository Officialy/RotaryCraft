package reika.rotarycraft.auxiliary;

import net.minecraft.network.chat.Component;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraftforge.event.BuildCreativeModeTabContentsEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import reika.rotarycraft.RotaryCraft;
import reika.rotarycraft.registry.RotaryBlocks;
import reika.rotarycraft.registry.RotaryItems;
@Mod.EventBusSubscriber(modid = RotaryCraft.MODID, bus = Mod.EventBusSubscriber.Bus.MOD)
public class RotaryCraftTabs {

    public static CreativeModeTab ROTARYCRAFT;
    public static CreativeModeTab ROTARYCRAFT_TRANSMISSION;
    public static CreativeModeTab ROTARYCRAFT_TOOLS;
    public static CreativeModeTab ROTARY_ORES;


    @SubscribeEvent
    public static void creativeTabRegistry(BuildCreativeModeTabContentsEvent event) {
       /* ROTARYCRAFT = event.registerCreativeModeTab(new ResourceLocation(RotaryCraft.MODID, "rotarycraft"), (builder -> {
            builder.icon(() -> RotaryItems.HSLA_STEEL_GEAR.get().getDefaultInstance()).displayItems((itemDisplayParameters, output) -> {
                output.accept(RotaryItems.IRON_SCRAP.get().getDefaultInstance());
                output.accept(RotaryItems.CUSTOMEXTRACT.get().getDefaultInstance());
                output.accept(RotaryItems.ALUMINUM_ALLOY_INGOT.get().getDefaultInstance());
                output.accept(RotaryItems.ALUMINUM_ALLOY_CYLINDER.get().getDefaultInstance());
                output.accept(RotaryItems.WOOD_FLYWHEEL_CORE.get().getDefaultInstance());
                output.accept(RotaryItems.STONE_FLYWHEEL_CORE.get().getDefaultInstance());
                output.accept(RotaryItems.IRON_FLYWHEEL_CORE.get().getDefaultInstance());
                output.accept(RotaryItems.GOLD_FLYWHEEL_CORE.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_ALLOY_FLYWHEEL_CORE.get().getDefaultInstance());
                output.accept(RotaryItems.NETHERRACK_DUST.get().getDefaultInstance());
                output.accept(RotaryItems.MOUNT.get().getDefaultInstance());
                output.accept(RotaryItems.HUB.get().getDefaultInstance());
                output.accept(RotaryItems.IGNITION_UNIT.get().getDefaultInstance());
                output.accept(RotaryItems.IMPELLER.get().getDefaultInstance());
                output.accept(RotaryItems.INDUCTIVE_INGOT.get().getDefaultInstance());
                output.accept(RotaryItems.LENS.get().getDefaultInstance());
                output.accept(RotaryItems.LINEAR_INDUCTION_MOTOR.get().getDefaultInstance());
                output.accept(RotaryItems.MIRROR.get().getDefaultInstance());
                output.accept(RotaryItems.MIXER.get().getDefaultInstance());
                output.accept(RotaryItems.PADDLE_PANEL.get().getDefaultInstance());
                output.accept(RotaryItems.POWER_MODULE.get().getDefaultInstance());
                output.accept(RotaryItems.PRESSURE_HEAD.get().getDefaultInstance());
                output.accept(RotaryItems.PROPELLER_BLADE.get().getDefaultInstance());
                output.accept(RotaryItems.RADAR_UNIT.get().getDefaultInstance());
                output.accept(RotaryItems.RADIATOR.get().getDefaultInstance());
                output.accept(RotaryItems.RAILGUN_ACCELERATOR.get().getDefaultInstance());
                output.accept(RotaryItems.SCREEN.get().getDefaultInstance());
                output.accept(RotaryItems.SONAR_UNIT.get().getDefaultInstance());
                output.accept(RotaryItems.TURBINE.get().getDefaultInstance());
                output.accept(RotaryItems.TURRET_AIMING_UNIT.get().getDefaultInstance());
                output.accept(RotaryItems.TURRET_BASE.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_ALLOY_INGOT.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_INGOT.get().getDefaultInstance());
                output.accept(RotaryItems.WORM_GEAR.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_SPRING.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_ALLOY_SPRING.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_SPRING.get().getDefaultInstance());
                output.accept(RotaryItems.HEAT_RAY_BARREL.get().getDefaultInstance());
                output.accept(RotaryItems.HEAT_RAY_CORE.get().getDefaultInstance());
                output.accept(RotaryItems.BELT.get().getDefaultInstance());
                output.accept(RotaryItems.BRAKE_DISC.get().getDefaultInstance());
                output.accept(RotaryItems.CHAIN_LINK.get().getDefaultInstance());
                output.accept(RotaryItems.CIRCUIT_BOARD.get().getDefaultInstance());
                output.accept(RotaryItems.COMBUSTOR.get().getDefaultInstance());
                output.accept(RotaryItems.COMPOUND_COMPRESSOR.get().getDefaultInstance());
                output.accept(RotaryItems.COMPRESSOR.get().getDefaultInstance());
                output.accept(RotaryItems.COMPOUND_TURBINE.get().getDefaultInstance());
                output.accept(RotaryItems.CONDENSER.get().getDefaultInstance());
                output.accept(RotaryItems.CYLINDER.get().getDefaultInstance());
                output.accept(RotaryItems.DIFFUSER.get().getDefaultInstance());
                output.accept(RotaryItems.DRILLHEAD_IRON.get().getDefaultInstance());
                output.accept(RotaryItems.GENERATOR.get().getDefaultInstance());
                output.accept(RotaryItems.GOLD_COIL.get().getDefaultInstance());
                output.accept(RotaryItems.HIGH_TEMPERATURE_COMBUSTOR.get().getDefaultInstance());
                output.accept(RotaryItems.SPRING_STEEL_INGOT.get().getDefaultInstance());
                output.accept(RotaryItems.RAILGUN_AMMO.get().getDefaultInstance());
                output.accept(RotaryItems.TARGET.get().getDefaultInstance());
                output.accept(RotaryItems.SLIDE.get().getDefaultInstance());
                output.accept(RotaryItems.SHELL.get().getDefaultInstance());
                output.accept(RotaryItems.DISK.get().getDefaultInstance());
                output.accept(RotaryItems.SAW.get().getDefaultInstance());
                output.accept(RotaryItems.DRY_ICE.get().getDefaultInstance());
                output.accept(RotaryItems.SILICON.get().getDefaultInstance());
                output.accept(RotaryItems.SILICON_DUST.get().getDefaultInstance());
                output.accept(RotaryItems.INDUCTIVE_BLEND.get().getDefaultInstance());
                output.accept(RotaryItems.ENDERIUM.get().getDefaultInstance());
                output.accept(RotaryItems.SLUDGE.get().getDefaultInstance());
                output.accept(RotaryItems.SAWDUST.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_GEAR.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_GEAR_2x.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_GEAR_4x.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_GEAR_8x.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_GEAR_16x.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_SHAFT.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_SHAFT_CORE.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_INGOT.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_NUGGET.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_ALLOY_GEAR.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_ALLOY_GEAR_2x.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_ALLOY_GEAR_4x.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_ALLOY_GEAR_8x.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_ALLOY_GEAR_16x.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_ALLOY_SHAFT.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_ALLOY_SHAFT_CORE.get().getDefaultInstance());
                output.accept(RotaryItems.DIAMOND_GEAR.get().getDefaultInstance());
                output.accept(RotaryItems.DIAMOND_GEAR_2x.get().getDefaultInstance());
                output.accept(RotaryItems.DIAMOND_GEAR_4x.get().getDefaultInstance());
                output.accept(RotaryItems.DIAMOND_GEAR_8x.get().getDefaultInstance());
                output.accept(RotaryItems.DIAMOND_GEAR_16x.get().getDefaultInstance());
                output.accept(RotaryItems.DIAMOND_SHAFT.get().getDefaultInstance());
                output.accept(RotaryItems.DIAMOND_SHAFT_CORE.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_GEAR.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_GEAR_2x.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_GEAR_4x.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_GEAR_8x.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_GEAR_16x.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_DUST.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_SHAFT.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_SHAFT_CORE.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_INGOT.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_FLAKES.get().getDefaultInstance());
                output.accept(RotaryItems.DIAMOND_FLAKES.get().getDefaultInstance());
                output.accept(RotaryItems.COMPOST.get().getDefaultInstance());
                output.accept(RotaryItems.YEAST.get().getDefaultInstance());
                output.accept(RotaryItems.ETHANOL.get().getDefaultInstance());
                output.accept(RotaryItems.CANOLA_SEEDS.get().getDefaultInstance());
                output.accept(RotaryItems.CANOLA_HUSKS.get().getDefaultInstance());
                output.accept(RotaryItems.DENSE_CANOLA_SEEDS.get().getDefaultInstance());
                output.accept(RotaryItems.TAR.get().getDefaultInstance());
                output.accept(RotaryItems.ALUMINUM_ALLOY_POWDER.get().getDefaultInstance());
                output.accept(RotaryItems.COAL_DUST.get().getDefaultInstance());
                output.accept(RotaryItems.FLOUR.get().getDefaultInstance());
                output.accept(RotaryItems.COKE.get().getDefaultInstance());
                output.accept(RotaryItems.NITRATE.get().getDefaultInstance());
                output.accept(RotaryItems.SALT.get().getDefaultInstance());
                output.accept(RotaryItems.SILVERIODIDE.get().getDefaultInstance());
                output.accept(RotaryBlocks.GPR.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HSLA_STEEL_BLOCK.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SOLAR_TOWER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BCENGINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DECO.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BEAM.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BRIDGE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.MININGPIPE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BLASTGLASS.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BLASTPANE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DECOTANK.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.ANTHRA.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.LONS.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SHIELD.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.COKE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SMOKE_DETECTOR.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.WIND_ENGINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.STEAM_ENGINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.PERFORMANCE_ENGINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.MICRO_TURBINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.GAS_ENGINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DC_ENGINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.MAGNETOSTATIC_ENGINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.AC_ENGINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.PUMP.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.AEROSOLIZER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.WINDER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.FLOODLIGHT.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DYNAMOMETER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.MIRROR.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.VAN_DE_GRAFF.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.LANDMINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.COOLING_FIN.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.MUSIC_BOX.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HEAT_RAY.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.OBSIDIAN_MAKER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.PLAYER_DETECTOR.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HEATER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.ITEM_CANNON.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.CAVE_SCANNER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BLOCK_CANNON.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.REFRESHER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SPILLER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.TNT_CANNON.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.CONTAINMENT.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BUCKET_FILLER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SELF_DESTRUCT.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.LINE_BUILDER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BEAM_MIRROR.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.FRICTION_BOILER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.STEAM_TURBINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.LAVA_SMELTORY.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.PARTICLE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.GRINDSTONE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BLOWER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.REFRIGERATOR.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.COMPOSTER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.FILLER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SPILLWAY.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SORTER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.FRICTION_HEATER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.COIL.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.GRINDER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HOSE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.PIPE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.FUEL_LINE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.VALVE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BYPASS.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SEPARATION.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SUCTION.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BEDROCK_PIPE.get().asItem().getDefaultInstance());
            }).title(Component.translatable("tab.rotarycraft"));
        }));

        ROTARYCRAFT_TRANSMISSION = event.registerCreativeModeTab(new ResourceLocation(RotaryCraft.MODID, "transmission"), (builder -> {
            builder.icon(() -> RotaryItems.DIAMOND_SHAFT.get().getDefaultInstance()).displayItems((itemDisplayParameters, output) -> {
                output.accept(RotaryBlocks.WOOD_FLYWHEEL.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HSLA_FLYWHEEL.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.TUNGSTEN_FLYWHEEL.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DIAMOND_FLYWHEEL.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BEDROCK_FLYWHEEL.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HSLA_GEARBOX_2x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HSLA_GEARBOX_4x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HSLA_GEARBOX_8x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HSLA_GEARBOX_16x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.TUNGSTEN_GEARBOX_2x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.TUNGSTEN_GEARBOX_4x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.TUNGSTEN_GEARBOX_8x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.TUNGSTEN_GEARBOX_16x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DIAMOND_GEARBOX_2x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DIAMOND_GEARBOX_4x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DIAMOND_GEARBOX_8x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DIAMOND_GEARBOX_16x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BEDROCK_GEARBOX_2x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BEDROCK_GEARBOX_4x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BEDROCK_GEARBOX_8x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BEDROCK_GEARBOX_16x.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.WOOD_SHAFT.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.STONE_SHAFT.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HSLA_SHAFT.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.TUNGSTEN_SHAFT.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DIAMOND_SHAFT.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BEDROCK_SHAFT.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SHAFT_CROSS.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SHAFT_MERGE.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.SPLITTER.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.DISTRIBUTION_CLUTCH.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.CLUTCH.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.MULTI_CLUTCH.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.COIL.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.CVT.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.WORMGEAR.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.HIGHGEAR.get().asItem().getDefaultInstance());
                output.accept(RotaryBlocks.BEVEL_GEARS.get().asItem().getDefaultInstance());
            }).title(Component.translatable("tab.rotarycraft.transmission"));
        }));

        ROTARYCRAFT_TOOLS = event.registerCreativeModeTab(new ResourceLocation(RotaryCraft.MODID, "tools"), (builder -> {
            builder.icon(() -> RotaryItems.BEDROCK_ALLOY_PICK.get().getDefaultInstance()).displayItems((itemDisplayParameters, output) -> {
                output.accept(RotaryItems.BEDROCK_ALLOY_PICK.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_AXE.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_SWORD.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_HOE.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_SHEARS.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_SHOVEL.get().getDefaultInstance());
                output.accept(RotaryItems.MOLTEN_HSLA_BUCKET.get().getDefaultInstance());
                output.accept(RotaryItems.NVG.get().getDefaultInstance());
                output.accept(RotaryItems.IO_GOGGLES.get().getDefaultInstance());
                output.accept(RotaryItems.ANGULAR_TRANSDUCER.get().getDefaultInstance());
                output.accept(RotaryItems.ETHANOL_CART.get().getDefaultInstance());
                output.accept(RotaryItems.JETPACK.get().getDefaultInstance());
                output.accept(RotaryItems.JUMP.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_JUMP_BOOTS.get().getDefaultInstance());
                output.accept(RotaryItems.UPGRADE.get().getDefaultInstance());
                output.accept(RotaryItems.RANGE_FINDER.get().getDefaultInstance());
                output.accept(RotaryItems.SPRING_PISTON.get().getDefaultInstance());
                output.accept(RotaryItems.FLAMETHROWER.get().getDefaultInstance());
                output.accept(RotaryItems.TILE_SELECTOR.get().getDefaultInstance());
                output.accept(RotaryItems.HANDHELD_CRAFTING_TABLE.get().getDefaultInstance());
                output.accept(RotaryItems.ULTRASOUND.get().getDefaultInstance());
                output.accept(RotaryItems.SCREWDRIVER.get().getDefaultInstance());
                output.accept(RotaryItems.HANDBOOK.get().getDefaultInstance());
                output.accept(RotaryItems.INTEGRATED_GEARBOX.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_PICKAXE.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_SHOVEL.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_AXE.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_SWORD.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_HOE.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_SHEARS.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_HELMET.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_CHESTPLATE.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_LEGGINGS.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_BOOTS.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_DRILL.get().getDefaultInstance());
                output.accept(RotaryItems.HSLA_STEEL_PACK.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_PACK.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_HELMET.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_CHESTPLATE.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_LEGGINGS.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_ALLOY_BOOTS.get().getDefaultInstance());
                output.accept(RotaryItems.BEDROCK_DRILL.get().getDefaultInstance());
                output.accept(RotaryItems.LUBE_BUCKET.get().getDefaultInstance());
                output.accept(RotaryItems.JET_FUEL_BUCKET.get().getDefaultInstance());
                output.accept(RotaryItems.ETHANOL_BUCKET.get().getDefaultInstance());
                output.accept(RotaryItems.NITROGEN_BUCKET.get().getDefaultInstance());
            }).title(Component.translatable("tab.rotarycraft.tools"));
        }));

        ROTARY_ORES = event.registerCreativeModeTab(new ResourceLocation(RotaryCraft.MODID, "ores"), (builder -> {
            builder.icon(() -> RotaryItems.TUNGSTEN_FLAKES.get().getDefaultInstance()).displayItems((itemDisplayParameters, output) -> {
                output.accept(RotaryItems.DIAMOND_FLAKES.get().getDefaultInstance());
                output.accept(RotaryItems.TUNGSTEN_FLAKES.get().getDefaultInstance());
            }).title(Component.translatable("tab.rotarycraft.ores"));
        }));*/
    }
}
