/*******************************************************************************
 * @author Reika Kalseki
 *
 * Copyright 2017
 *
 * All rights reserved.
 * Distribution of the software in any form is only allowed with
 * explicit, prior permission from the owner.
 ******************************************************************************/
// Date: 24/03/2013 6:26:43 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package reika.rotarycraft.models;

import com.mojang.blaze3d.vertex.PoseStack;
import com.mojang.blaze3d.vertex.VertexConsumer;
import net.minecraft.client.model.Model;
import net.minecraft.client.model.geom.ModelPart;
import net.minecraft.client.model.geom.PartPose;
import net.minecraft.client.model.geom.builders.CubeListBuilder;
import net.minecraft.client.model.geom.builders.LayerDefinition;
import net.minecraft.client.model.geom.builders.MeshDefinition;
import net.minecraft.client.model.geom.builders.PartDefinition;
import net.minecraft.client.renderer.RenderType;


public class VLampModel extends Model {
    //fields
    public final ModelPart shape1;
    public final ModelPart shape2;
    public final ModelPart shape3;
    public final ModelPart shape4;
    public final ModelPart shape5;
    public final ModelPart shape6;
    public final ModelPart shape7;
    public final ModelPart shape8;
    public final ModelPart shape9;
    public final ModelPart shape10;
    public final ModelPart shape11;
    public final ModelPart shape12;
    public final ModelPart shape13;
    public final ModelPart shape14;
    public final ModelPart shape15;
    public final ModelPart shape16;
    public final ModelPart shape17;
    public final ModelPart shape17b;
    public final ModelPart shape18;
    public final ModelPart shape18b;
    public final ModelPart shape19;

    public VLampModel(ModelPart root) {
        super(RenderType::entitySolid);

        this.shape1 = root.getChild("shape1");
        this.shape2 = root.getChild("shape2");
        this.shape3 = root.getChild("shape3");
        this.shape4 = root.getChild("shape4");
        this.shape5 = root.getChild("shape5");
        this.shape6 = root.getChild("shape6");
        this.shape7 = root.getChild("shape7");
        this.shape8 = root.getChild("shape8");
        this.shape9 = root.getChild("shape9");
        this.shape10 = root.getChild("shape10");
        this.shape11 = root.getChild("shape11");
        this.shape12 = root.getChild("shape12");
        this.shape13 = root.getChild("shape13");
        this.shape14 = root.getChild("shape14");
        this.shape15 = root.getChild("shape15");
        this.shape16 = root.getChild("shape16");
        this.shape17 = root.getChild("shape17");
        this.shape17b = root.getChild("shape17b");
        this.shape18 = root.getChild("shape18");
        this.shape18b = root.getChild("shape18b");
        this.shape19 = root.getChild("shape19");

        this.shape1.setPos(-8F, 23F, -8F);
        this.shape2.setPos(-7F, 16F, 7F);
        this.shape3.setPos(-6F, 12F, 6F);
        this.shape4.setPos(4F, 12F, 6F);
        this.shape5.setPos(-4F, 12F, 6F);
        this.shape6.setPos(-4F, 12.1F, -4F);
        this.shape7.setPos(4F, 10F, 5F);
        this.shape8.setPos(-5F, 10F, 5F);
        this.shape9.setPos(-4F, 10F, 5F);
        this.shape10.setPos(-4F, 10.1F, -4F);
        this.shape11.setPos(-7.5F, 21F, 7.5F);
        this.shape12.setPos(-4F, 10F, 4F);
        this.shape13.setPos(-4F, 10.1F, -3F);
        this.shape14.setPos(-4F, 10F, 3F);
        this.shape15.setPos(3F, 10F, 3F);
        this.shape16.setPos(-3F, 11F, 3F);
        this.shape17.setPos(-2F, 10F, -6F);
        this.shape17b.setPos(-2F, 10F, 5F);
        this.shape18.setPos(5F, 10F, -2F);
        this.shape18b.setPos(-6F, 10F, -2F);
        this.shape19.setPos(-4F, 8F, -4F);

    }

    public static LayerDefinition createLayer() {
        MeshDefinition meshdefinition = new MeshDefinition();
        PartDefinition partdefinition = meshdefinition.getRoot();

        partdefinition.addOrReplaceChild("shape1", CubeListBuilder.create().texOffs(0, 0)
                .addBox(0F, 0F, 0F, 16, 1, 16)
                .mirror(), PartPose.rotation(0F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape2", CubeListBuilder.create().texOffs(67, 30)
                .addBox(0F, 0F, 0F, 14, 14, 5)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape3", CubeListBuilder.create().texOffs(0, 58)
                .addBox(0F, 0F, 0F, 2, 12, 4)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape4", CubeListBuilder.create().texOffs(0, 58)
                .addBox(0F, 0F, 0F, 2, 12, 4)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape5", CubeListBuilder.create().texOffs(0, 52)
                .addBox(0F, 0F, 0F, 8, 2, 4)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape6", CubeListBuilder.create().texOffs(0, 52)
                .addBox(0F, 0F, 0F, 8, 2, 4)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape7", CubeListBuilder.create().texOffs(12, 58)
                .addBox(0F, 0F, 0F, 1, 10, 2)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape8", CubeListBuilder.create().texOffs(12, 58)
                .addBox(0F, 0F, 0F, 1, 10, 2)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape9", CubeListBuilder.create().texOffs(32, 54)
                .addBox(0F, 0F, 0F, 8, 1, 2)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape10", CubeListBuilder.create().texOffs(32, 54)
                .addBox(0F, 0F, 0F, 8, 1, 2)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape11", CubeListBuilder.create().texOffs(64, 49)
                .addBox(0F, 0F, 0F, 15, 15, 2)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape12", CubeListBuilder.create().texOffs(32, 57)
                .addBox(0F, 0F, 0F, 8, 1, 2)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape13", CubeListBuilder.create().texOffs(32, 57)
                .addBox(0F, 0F, 0F, 8, 1, 2)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape14", CubeListBuilder.create().texOffs(20, 24)
                .addBox(0F, 0F, 0F, 1, 6, 2)
                .mirror(), PartPose.rotation(-1.56207F, 0F, -0.0174533F));

        partdefinition.addOrReplaceChild("shape15", CubeListBuilder.create().texOffs(20, 24)
                .addBox(0F, 0F, 0F, 1, 6, 2)
                .mirror(), PartPose.rotation(-1.56207F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape16", CubeListBuilder.create().texOffs(-1, 45)
                .addBox(0F, 0F, 0F, 6, 6, 1)
                .mirror(), PartPose.rotation(-1.570796F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape17", CubeListBuilder.create().texOffs(0, 84)
                .addBox(0F, 0F, 0F, 4, 7, 1)
                .mirror(), PartPose.rotation(-0.1396263F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape17b", CubeListBuilder.create().texOffs(0, 84)
                .addBox(0F, 0F, 0F, 4, 7, 1)
                .mirror(), PartPose.rotation(0.1396263F, 0F, 0F));

        partdefinition.addOrReplaceChild("shape18", CubeListBuilder.create().texOffs(0, 84)
                .addBox(0F, 0F, 0F, 1, 7, 4)
                .mirror(), PartPose.rotation(0F, 0F, -0.1396263F));

        partdefinition.addOrReplaceChild("shape18b", CubeListBuilder.create().texOffs(0, 84)
                .addBox(0F, 0F, 0F, 1, 7, 4).mirror()
                .mirror(), PartPose.rotation(0F, 0F, 0.1396263F));

        partdefinition.addOrReplaceChild("shape19", CubeListBuilder.create().texOffs(0, 96)
                .addBox(0F, 0F, 0F, 8, 2, 8)
                .mirror(), PartPose.ZERO);

        return LayerDefinition.create(meshdefinition, 128, 128);
    }

    @Override
    public void renderToBuffer(PoseStack stack, VertexConsumer pBuffer, int pPackedLight, int pPackedOverlay, float pRed, float pGreen, float pBlue, float pAlpha) {
        boolean beam = true; //todo (Boolean) li.get(0);
        shape1.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape2.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape3.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape4.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape5.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape6.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape7.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape8.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape9.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape10.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape11.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape12.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape13.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape14.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape15.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        shape16.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        if (beam) {
            shape17.render(stack, pBuffer, pPackedLight, pPackedOverlay);
            shape17b.render(stack, pBuffer, pPackedLight, pPackedOverlay);
            shape18.render(stack, pBuffer, pPackedLight, pPackedOverlay);
            shape18b.render(stack, pBuffer, pPackedLight, pPackedOverlay);
            shape19.render(stack, pBuffer, pPackedLight, pPackedOverlay);
        }
    }

}
